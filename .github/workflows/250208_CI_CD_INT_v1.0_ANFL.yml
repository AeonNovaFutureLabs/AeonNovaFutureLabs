# ----------------------------------------------------------------------------
# File: 250208_CI_CD_INT_v1.0_ANFL.yml
# Location: /Volumes/mattstack/VSCode/AeonNovaFutureLabs/.github/workflows/
#
# Purpose: CI/CD pipeline configuration for ANFL framework
# Security Level: Confidential
# Owner: Infrastructure Team
# Version: 1.0
# Last Modified: 2025-02-08
# ----------------------------------------------------------------------------

name: ANFL CI/CD Pipeline

on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main, development ]

env:
  PYTHON_VERSION: '3.8'
  NODE_VERSION: '18'
  DOCKER_BUILDKIT: '1'

jobs:
  validate:
    name: Validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install black isort mypy pytest pytest-cov
          
      - name: Code formatting
        run: |
          black . --check
          isort . --check
          
      - name: Type checking
        run: |
          mypy .
          
      - name: Shell script validation
        run: |
          shellcheck custom_zshrc/*.zsh
          
  test:
    name: Testing
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov
          
      - name: Run tests
        run: |
          pytest --cov=. --cov-report=xml
          
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          
  security:
    name: Security Scan
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Run security scan
        uses: snyk/actions/python@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          
      - name: Run SAST
        uses: github/codeql-action/analyze@v2
        
  build:
    name: Build
    needs: security
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build and push AI components
        uses: docker/build-push-action@v4
        with:
          context: ./ai_components
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ghcr.io/${{ github.repository }}/ai:latest
            ghcr.io/${{ github.repository }}/ai:${{ github.sha }}
            
      - name: Build and push Vector Store
        uses: docker/build-push-action@v4
        with:
          context: ./vector_store
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ghcr.io/${{ github.repository }}/vector-store:latest
            ghcr.io/${{ github.repository }}/vector-store:${{ github.sha }}
            
  deploy-staging:
    name: Deploy to Staging
    needs: build
    if: github.ref == 'refs/heads/development'
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          
      - name: Deploy to EKS
        run: |
          aws eks update-kubeconfig --name anfl-staging
          kubectl apply -f k8s/staging/
          
  deploy-production:
    name: Deploy to Production
    needs: deploy-staging
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          
      - name: Deploy to EKS
        run: |
          aws eks update-kubeconfig --name anfl-production
          kubectl apply -f k8s/production/
          
  notify:
    name: Notification
    needs: [deploy-staging, deploy-production]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}